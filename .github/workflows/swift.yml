name: Swift

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest  # Usa uma máquina macOS

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4

      - name: Configurar Versão do Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Instalar Dependências do CocoaPods
        run: |
          gem install cocoapods
          pod install
        working-directory: ./Example # Mude caso seu Podfile esteja em outro lugar

      - name: Extrair nome do Podspec
        id: extract_namee
        run: |
          PODSPEC_FILE=$(find . -name "*.podspec")
          NAME=$(grep 's.name' $PODSPEC_FILE | sed -n -e 's/^.*s.name *= *//p'| tr -d '"' | tr -d "'")

      - name: Extrair versão do Podspec
        id: extract_version
        run: |
          VERSION=$(grep 's.version' $PODSPEC_FILE | sed -n -e 's/^.*s.version *= *//p'| tr -d '"' | tr -d "'")

      - name: Compilar e Criar .xcframework
        run: |
          xcodebuild archive -workspace ./Example/$NAME.xcworkspace \
          -scheme $NAME \
          -destination "generic/platform=iOS" \
          -archivePath build/ios.xcarchive \
          -sdk iphoneos \
          SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          IPHONEOS_DEPLOYMENT_TARGET=15.0

          xcodebuild archive -workspace ./Example/$NAME.xcworkspace \
          -scheme $NAME \
          -destination "generic/platform=iOS Simulator" \
          -archivePath build/ios-simulator.xcarchive \
          -sdk iphonesimulator \
          SKIP_INSTALL=NO BUILD_LIBRARY_FOR_DISTRIBUTION=YES
          IPHONEOS_DEPLOYMENT_TARGET=15.0

          xcodebuild -create-xcframework \
          -framework build/ios.xcarchive/Products/Library/Frameworks/$NAME.framework \
          -framework build/ios-simulator.xcarchive/Products/Library/Frameworks/$NAME.framework \
          -output build/${{ env.NAME }}.xcframework

      - name: Compactar .xcframework
        run: |
          cd build
          zip -r $NAME.zip $NAME.xcframework

      - name: Upload via REST API
        uses: fjogeleit/http-request-action@v1
        with:
          url: "https://artifactory.carotaapp.com/artifactory/ios-repo/$NAME/$VERSION/$NAME.zip"  # Usando o nome e a versão extraídos
          method: "PUT"
          username: ${{ secrets.ARTIFACTORY_USER }}
          password: ${{ secrets.ARTIFACTORY_PASSWORD }}
          data: "@build/$NAME.zip"