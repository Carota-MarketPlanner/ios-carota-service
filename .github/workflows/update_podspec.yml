name: Atualizar Podspec

on:
  workflow_dispatch:  # Permite rodar manualmente
  pull_request:
    branches:
      - develop

jobs:
  update-podspec:
    runs-on: macos-latest
    steps:
      - name: Checkout do repositório atual
        uses: actions/checkout@v3

      - name: Extact name and version from Podspec
        id: extract_namee
        run: |
          PODSPEC_FILE=$(find . -name "*.podspec")
          NAME=$(grep 's.name' $PODSPEC_FILE | sed -n -e 's/^.*s.name *= *//p'| tr -d '"' | tr -d "'")
          echo "NAME=${NAME}" >> $GITHUB_ENV
          VERSION=$(grep 's.version' $PODSPEC_FILE | sed -n -e 's/^.*s.version *= *//p'| tr -d '"' | tr -d "'")
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      - name: Atualizar o s.source no Podspec
        run: |
          ARTIFACTORY_URL="https://artifactory.carotaapp.com/artifactory/ios-repo/${{ env.NAME }}/${{ env.VERSION }}/${{ env.NAME }}.zip"
          
          sed -i '' "s|s.source *= *{[^}]*}|s.source           = { :http => \"${ARTIFACTORY_URL}\" }|" ${{ env.NAME }}.podspec

      - name: Checkout do repositório de Specs
        uses: actions/checkout@v3
        with:
          repository: "Carota-MarketPlanner/Specs"
          token: ${{ secrets.PAT_GITHUB }}
          path: specs_repo  # Clona o repositório dentro da pasta specs_repo

      - name: Copiar o Podspec para o repositório de Specs
        run: |
          VERSION=${{ env.VERSION }}
          NAME=${{ env.NAME }}
          mkdir -p specs_repo/${NAME}/${VERSION}
          cp ${NAME}.podspec specs_repo/${NAME}/${VERSION}/${NAME}.podspec

      - name: Commit e Push para o repositório de Specs
        run: |
          cd specs_repo
          git config --global user.email "seu@email.com"
          git config --global user.name "Seu Nome"
          git add ${{ env.NAME }}/${{ env.VERSION }}/${{ env.NAME }}.podspec
          git commit -m "Atualizando o ${{ env.NAME }} para a versão ${{ env.VERSION }}"
          git push