name: Build And Publish Release

on:
  pull_request:
    branches: [ "develop" ]

jobs:
  build:
    uses: ./.github/workflows/build.yml
    secrets: inherit

  publish:
    name: Publish Release
    runs-on: macos-latest
    needs: [build]

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Get Info
          NAME=${{ needs.build.outputs.name }}
          VERSION=${{ needs.build.outputs.version }}

      - name: Baixar XCFramework do primeiro workflow
        uses: actions/download-artifact@v4
        with:
          name: xcframework-${NAME}
          path: build/${NAME}.xcframework

      - name: Compact .xcframework
        run: |
          cd build
          zip -r ${NAME}.zip ${NAME}.xcframework

      - name: Verificar se o arquivo já existe no Artifactory
        run: |
          URL="https://artifactory.carotaapp.com/artifactory/ios-repo/${NAME}/${VERSION}/${NAME}.zip"

          # Verifica se o arquivo já existe (HEAD request)
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_PASSWORD }}" -I "$URL")

          if [[ "$RESPONSE" == "200" ]]; then
            echo "⚠️ Arquivo já existe no Artifactory! Código HTTP: $RESPONSE"
            echo "Arquivo: $URL"
            exit 1  # Se quiser impedir o upload, falhe aqui
          fi

      - name: Upload para o Artifactory com curl
        run: |
          RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" -u "${{ secrets.ARTIFACTORY_USER }}:${{ secrets.ARTIFACTORY_PASSWORD }}" \
          -T "build/${NAME}.zip" \
          "$URL")

          if [[ "$RESPONSE" =~ ^2 ]]; then
            echo "✅ Upload bem-sucedido! Código HTTP: $RESPONSE"
          else
            echo "❌ Falha no upload! Código HTTP: $RESPONSE"
            exit 1
          fi